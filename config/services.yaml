# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_locales: en|fr

    rabbitmq_host: 'localhost'
    rabbitmq_user: 'guest'
    rabbitmq_password: 'guest'
    rabbitmq_statuslayer_vhost: 'affiliation'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $projectDir: '%kernel.project_dir%'
            $uploadPath: '%kernel.project_dir%/public/images'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    App\EventSubscriber\RedirectToLocaleSubscriber:
        arguments: ['@router', '%app_locales%', '%locale%']

    app.services.supervisord.xmlrpc:
        class: App\Services\Supervisord\XmlRpcService

    app.route.loader:
        class: App\Routing\ExtraLoader
        tags: ['routing.loader']
        arguments:
            - '@App\Repository\ProductRepository'
            - '@App\Repository\CategorieRepository'
            - '@App\Repository\BlogPostRepository'

    App\Producer\DownloadFiles: '@old_sound_rabbit_mq.download_files_producer'
    App\Producer\ParseFiles: '@old_sound_rabbit_mq.parse_files_producer'
    App\Producer\CheckProducts: '@old_sound_rabbit_mq.check_products_producer'
    App\Producer\CreateProducts: '@old_sound_rabbit_mq.create_products_producer'
    App\Producer\UpdateProducts: '@old_sound_rabbit_mq.update_products_producer'

    download_service:
        class: App\Consumer\DownloadService

    parse_service:
        class: App\Consumer\ParseService
        arguments:
            - '@App\Repository\WebsiteRepository'
            - '@App\Repository\ProductRepository'

    checkproduct_service:
        class: App\Consumer\CheckProductService
        arguments:
            - '@App\Repository\ProductRepository'
            - '@App\Repository\CategoriesImportRepository'
            - '@App\Repository\ImportRepository'

    updateproduct_service:
        class: App\Consumer\UpdateProductService

    createproduct_service:
        class: App\Consumer\CreateProductService
        arguments:
            - '@App\Repository\ProductRepository'
            - '@App\Repository\ProductDetailsRepository'
            - '@App\Repository\WebsiteRepository'
            - '@App\Repository\BrandRepository'
            - '@App\Repository\CategorieRepository'
